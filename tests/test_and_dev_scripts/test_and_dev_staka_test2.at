
# test and dev model staka/test2


AT_SETUP([staka/test2: tricommand])
AT_SKIP_IF([test ! -x $TEST_AND_DEV/staka/test2/tricommand])
AT_CHECK([if test -f $TEST_AND_DEV/staka/test2/trainable.bin.bz2 -a \
                ! -f $TEST_AND_DEV/staka/test2/trainable.bin; \
          then bunzip2 -k $TEST_AND_DEV/staka/test2/trainable.bin.bz2; fi])
AT_CHECK([(cd $TEST_AND_DEV/staka/test2 && ulimit -v ${GMTK_MEMLIMT-8000000} &&            ulimit -t ${GMTK_TIMELIMIT-120} && ./tricommand)], [], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([staka/test2: infocommand])
AT_SKIP_IF([test ! -x $TEST_AND_DEV/staka/test2/infocommand])
AT_CHECK([(cd $TEST_AND_DEV/staka/test2 && ulimit -v ${GMTK_MEMLIMT-8000000} &&            ulimit -t ${GMTK_TIMELIMIT-120} && ./infocommand)], [], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([staka/test2: traincommand])
AT_SKIP_IF([test ! -x $TEST_AND_DEV/staka/test2/traincommand])
AT_CHECK([(cd $TEST_AND_DEV/staka/test2 && ulimit -v ${GMTK_MEMLIMT-8000000} &&            ulimit -t ${GMTK_TIMELIMIT-120} && ./traincommand)], [], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([staka/test2: jtcommand])
AT_SKIP_IF([test ! -x $TEST_AND_DEV/staka/test2/jtcommand])
AT_CHECK([(cd $TEST_AND_DEV/staka/test2 && ulimit -v ${GMTK_MEMLIMT-8000000} &&            ulimit -t ${GMTK_TIMELIMIT-120} && ./jtcommand)], [], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([staka/test2: vitcommand])
AT_SKIP_IF([test ! -x $TEST_AND_DEV/staka/test2/vitcommand])
AT_CHECK([(cd $TEST_AND_DEV/staka/test2 && ulimit -v ${GMTK_MEMLIMT-8000000} &&            ulimit -t ${GMTK_TIMELIMIT-120} && ./vitcommand)], [], [ignore], [ignore])
AT_CLEANUP

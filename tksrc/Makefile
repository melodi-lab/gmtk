# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/gmtk
pkgincludedir = $(includedir)/gmtk
pkglibdir = $(libdir)/gmtk
pkglibexecdir = $(libexecdir)/gmtk
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = gmtkTime$(EXEEXT) gmtkJT$(EXEEXT) \
	gmtkEMtrainNew$(EXEEXT) gmtkKernel$(EXEEXT) \
	gmtkViterbi$(EXEEXT) gmtkTriangulate$(EXEEXT) \
	gmtkParmConvert$(EXEEXT) gmtkTFmerge$(EXEEXT) \
	gmtkDTindex$(EXEEXT) gmtkNGramIndex$(EXEEXT) gmtkTie$(EXEEXT) \
	$(GMTKVIZ)
EXTRA_PROGRAMS = gmtkViz$(EXEEXT)
check_PROGRAMS = testMDCPT$(EXEEXT) testMTCPT$(EXEEXT) \
	testRngDecisionTree$(EXEEXT) testPackCliqueValue$(EXEEXT) \
	testGMParms$(EXEEXT) testFileParser$(EXEEXT) lex.yy$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure GMTK_FileTokenizer.cc TODO \
	config.guess config.sub depcomp install-sh missing ylwrap
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libGMTK_a_AR = $(AR) $(ARFLAGS)
libGMTK_a_LIBADD =
am_libGMTK_a_OBJECTS = GMTK_Dense1DPMF.$(OBJEXT) \
	GMTK_Sparse1DPMF.$(OBJEXT) GMTK_MeanVector.$(OBJEXT) \
	GMTK_DiagCovarVector.$(OBJEXT) GMTK_RealMatrix.$(OBJEXT) \
	GMTK_DlinkMatrix.$(OBJEXT) GMTK_DirichletTable.$(OBJEXT) \
	GMTK_DirichletPrior.$(OBJEXT) GMTK_MDCPT.$(OBJEXT) \
	GMTK_MSCPT.$(OBJEXT) GMTK_RealArray.$(OBJEXT) \
	GMTK_CPT.$(OBJEXT) GMTK_MixtureCommon.$(OBJEXT) \
	GMTK_Component.$(OBJEXT) GMTK_GaussianComponent.$(OBJEXT) \
	GMTK_GMParms.$(OBJEXT) GMTK_FileParser.$(OBJEXT) \
	GMTK_FileTokenizer.$(OBJEXT) GMTK_MTCPT.$(OBJEXT) \
	GMTK_Mixture.$(OBJEXT) GMTK_DiagGaussian.$(OBJEXT) \
	GMTK_Dlinks.$(OBJEXT) GMTK_EMable.$(OBJEXT) \
	GMTK_LinMeanCondDiagGaussian.$(OBJEXT) \
	GMTK_RngDecisionTree.$(OBJEXT) GMTK_NameCollection.$(OBJEXT) \
	GMTK_GMTemplate.$(OBJEXT) GMTK_JunctionTree.$(OBJEXT) \
	GMTK_GraphicalModel.$(OBJEXT) GMTK_MaxClique.$(OBJEXT) \
	GMTK_BoundaryTriangulate.$(OBJEXT) GMTK_Timer.$(OBJEXT) \
	GMTK_Signals.$(OBJEXT) GMTK_PackCliqueValue.$(OBJEXT) \
	GMTK_Vocab.$(OBJEXT) GMTK_NGramCPT.$(OBJEXT) \
	GMTK_FNGramCPT.$(OBJEXT) GMTK_RV.$(OBJEXT) \
	GMTK_ContRV.$(OBJEXT) GMTK_DiscRV.$(OBJEXT) \
	GMTK_HidDiscRV.$(OBJEXT) GMTK_ObsDiscRV.$(OBJEXT) \
	GMTK_ObsContRV.$(OBJEXT) GMTK_ScPnShRV.$(OBJEXT) \
	GMTK_SwDiscRV.$(OBJEXT) GMTK_SwRV.$(OBJEXT) \
	GMTK_Sw_HidDiscRV.$(OBJEXT) GMTK_Sw_ObsContRV.$(OBJEXT) \
	GMTK_Sw_ObsDiscRV.$(OBJEXT) GMTK_VECPT.$(OBJEXT) \
	GMTK_NetworkFlow.$(OBJEXT) \
	GMTK_NetworkFlowTriangulate.$(OBJEXT) \
	GMTK_LatticeADT.$(OBJEXT) GMTK_FileTokenizer.$(OBJEXT) \
	GMTK_LatticeNodeCPT.$(OBJEXT) GMTK_ScPnSh_HidDiscRV.$(OBJEXT) \
	GMTK_WeightMatrix.$(OBJEXT) GMTK_LatticeEdgeCPT.$(OBJEXT) \
	GMTK_Tie.$(OBJEXT) tieSupport.$(OBJEXT) GMTK_RVInfo.$(OBJEXT) \
	GMTK_GammaComponent.$(OBJEXT) GMTK_BetaComponent.$(OBJEXT) \
	GMTK_Partition.$(OBJEXT) GMTK_JT_Partition.$(OBJEXT) \
	GMTK_PartitionTables.$(OBJEXT) \
	GMTK_PartitionStructures.$(OBJEXT) \
	GMTK_JunctionTreeMessagePassing.$(OBJEXT) \
	GMTK_JunctionTreeIslandMessagePassing.$(OBJEXT)
libGMTK_a_OBJECTS = $(am_libGMTK_a_OBJECTS)
libXOPT_a_AR = $(AR) $(ARFLAGS)
libXOPT_a_LIBADD =
am_libXOPT_a_OBJECTS = libXOPT_a-GMTK_DiagGaussianOpt.$(OBJEXT) \
	libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.$(OBJEXT) \
	libXOPT_a-GMTK_PackCliqueValueOpt.$(OBJEXT)
libXOPT_a_OBJECTS = $(am_libXOPT_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_gmtkDTindex_OBJECTS = gmtkDTindex.$(OBJEXT)
gmtkDTindex_OBJECTS = $(am_gmtkDTindex_OBJECTS)
gmtkDTindex_LDADD = $(LDADD)
gmtkDTindex_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkEMtrainNew_OBJECTS = gmtkEMtrainNew.$(OBJEXT)
gmtkEMtrainNew_OBJECTS = $(am_gmtkEMtrainNew_OBJECTS)
gmtkEMtrainNew_LDADD = $(LDADD)
gmtkEMtrainNew_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkJT_OBJECTS = gmtkJT.$(OBJEXT)
gmtkJT_OBJECTS = $(am_gmtkJT_OBJECTS)
gmtkJT_LDADD = $(LDADD)
gmtkJT_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkKernel_OBJECTS = gmtkKernel.$(OBJEXT)
gmtkKernel_OBJECTS = $(am_gmtkKernel_OBJECTS)
gmtkKernel_LDADD = $(LDADD)
gmtkKernel_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkNGramIndex_OBJECTS = gmtkNGramIndex.$(OBJEXT)
gmtkNGramIndex_OBJECTS = $(am_gmtkNGramIndex_OBJECTS)
gmtkNGramIndex_LDADD = $(LDADD)
gmtkNGramIndex_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkParmConvert_OBJECTS = gmtkParmConvert.$(OBJEXT)
gmtkParmConvert_OBJECTS = $(am_gmtkParmConvert_OBJECTS)
gmtkParmConvert_LDADD = $(LDADD)
gmtkParmConvert_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkTFmerge_OBJECTS = gmtkTFmerge.$(OBJEXT)
gmtkTFmerge_OBJECTS = $(am_gmtkTFmerge_OBJECTS)
gmtkTFmerge_LDADD = $(LDADD)
gmtkTFmerge_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkTie_OBJECTS = gmtkTie.$(OBJEXT)
gmtkTie_OBJECTS = $(am_gmtkTie_OBJECTS)
gmtkTie_LDADD = $(LDADD)
gmtkTie_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkTime_OBJECTS = gmtkTime.$(OBJEXT)
gmtkTime_OBJECTS = $(am_gmtkTime_OBJECTS)
gmtkTime_LDADD = $(LDADD)
gmtkTime_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkTriangulate_OBJECTS = gmtkTriangulate.$(OBJEXT)
gmtkTriangulate_OBJECTS = $(am_gmtkTriangulate_OBJECTS)
gmtkTriangulate_LDADD = $(LDADD)
gmtkTriangulate_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkViterbi_OBJECTS = gmtkViterbi.$(OBJEXT)
gmtkViterbi_OBJECTS = $(am_gmtkViterbi_OBJECTS)
gmtkViterbi_LDADD = $(LDADD)
gmtkViterbi_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
am_gmtkViz_OBJECTS = gmtkViz-gmtkViz.$(OBJEXT)
gmtkViz_OBJECTS = $(am_gmtkViz_OBJECTS)
gmtkViz_LDADD = $(LDADD)
gmtkViz_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
gmtkViz_LINK = $(CXXLD) $(gmtkViz_CXXFLAGS) $(CXXFLAGS) \
	$(gmtkViz_LDFLAGS) $(LDFLAGS) -o $@
am_lex_yy_OBJECTS = lex_yy-GMTK_FileTokenizer.$(OBJEXT)
lex_yy_OBJECTS = $(am_lex_yy_OBJECTS)
lex_yy_LDADD = $(LDADD)
lex_yy_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
lex_yy_LINK = $(CXXLD) $(lex_yy_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_testFileParser_OBJECTS = testFileParser-GMTK_FileParser.$(OBJEXT) \
	testFileParser-GMTK_FileTokenizer.$(OBJEXT)
testFileParser_OBJECTS = $(am_testFileParser_OBJECTS)
testFileParser_LDADD = $(LDADD)
testFileParser_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
testFileParser_LINK = $(CXXLD) $(testFileParser_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_testGMParms_OBJECTS = testGMParms-GMTK_GMParms.$(OBJEXT)
testGMParms_OBJECTS = $(am_testGMParms_OBJECTS)
testGMParms_LDADD = $(LDADD)
testGMParms_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
testGMParms_LINK = $(CXXLD) $(testGMParms_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_testMDCPT_OBJECTS = testMDCPT-GMTK_MDCPT.$(OBJEXT)
testMDCPT_OBJECTS = $(am_testMDCPT_OBJECTS)
testMDCPT_LDADD = $(LDADD)
testMDCPT_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
testMDCPT_LINK = $(CXXLD) $(testMDCPT_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_testMTCPT_OBJECTS = testMTCPT-GMTK_MTCPT.$(OBJEXT)
testMTCPT_OBJECTS = $(am_testMTCPT_OBJECTS)
testMTCPT_LDADD = $(LDADD)
testMTCPT_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
testMTCPT_LINK = $(CXXLD) $(testMTCPT_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_testPackCliqueValue_OBJECTS =  \
	testPackCliqueValue-GMTK_PackCliqueValue.$(OBJEXT)
testPackCliqueValue_OBJECTS = $(am_testPackCliqueValue_OBJECTS)
testPackCliqueValue_LDADD = $(LDADD)
testPackCliqueValue_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
testPackCliqueValue_LINK = $(CXXLD) $(testPackCliqueValue_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_testRngDecisionTree_OBJECTS =  \
	testRngDecisionTree-GMTK_RngDecisionTree.$(OBJEXT) \
	testRngDecisionTree-GMTK_RV.$(OBJEXT) \
	testRngDecisionTree-GMTK_DiscRV.$(OBJEXT)
testRngDecisionTree_OBJECTS = $(am_testRngDecisionTree_OBJECTS)
testRngDecisionTree_LDADD = $(LDADD)
testRngDecisionTree_DEPENDENCIES = libGMTK.a libXOPT.a \
	$(builddir)/../featureFileIO/libgmtkio.a \
	$(builddir)/../miscSupport/libmiscSupport.a \
	$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a
testRngDecisionTree_LINK = $(CXXLD) $(testRngDecisionTree_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libGMTK_a_SOURCES) $(libXOPT_a_SOURCES) \
	$(gmtkDTindex_SOURCES) $(gmtkEMtrainNew_SOURCES) \
	$(gmtkJT_SOURCES) $(gmtkKernel_SOURCES) \
	$(gmtkNGramIndex_SOURCES) $(gmtkParmConvert_SOURCES) \
	$(gmtkTFmerge_SOURCES) $(gmtkTie_SOURCES) $(gmtkTime_SOURCES) \
	$(gmtkTriangulate_SOURCES) $(gmtkViterbi_SOURCES) \
	$(gmtkViz_SOURCES) $(lex_yy_SOURCES) $(testFileParser_SOURCES) \
	$(testGMParms_SOURCES) $(testMDCPT_SOURCES) \
	$(testMTCPT_SOURCES) $(testPackCliqueValue_SOURCES) \
	$(testRngDecisionTree_SOURCES)
DIST_SOURCES = $(libGMTK_a_SOURCES) $(libXOPT_a_SOURCES) \
	$(gmtkDTindex_SOURCES) $(gmtkEMtrainNew_SOURCES) \
	$(gmtkJT_SOURCES) $(gmtkKernel_SOURCES) \
	$(gmtkNGramIndex_SOURCES) $(gmtkParmConvert_SOURCES) \
	$(gmtkTFmerge_SOURCES) $(gmtkTie_SOURCES) $(gmtkTime_SOURCES) \
	$(gmtkTriangulate_SOURCES) $(gmtkViterbi_SOURCES) \
	$(gmtkViz_SOURCES) $(lex_yy_SOURCES) $(testFileParser_SOURCES) \
	$(testGMParms_SOURCES) $(testMDCPT_SOURCES) \
	$(testMTCPT_SOURCES) $(testPackCliqueValue_SOURCES) \
	$(testRngDecisionTree_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /tmp/gmtk-hg/gmtk/tksrc/missing --run aclocal-1.11
AMTAR = ${SHELL} /tmp/gmtk-hg/gmtk/tksrc/missing --run tar
AUTOCONF = ${SHELL} /tmp/gmtk-hg/gmtk/tksrc/missing --run autoconf
AUTOHEADER = ${SHELL} /tmp/gmtk-hg/gmtk/tksrc/missing --run autoheader
AUTOMAKE = ${SHELL} /tmp/gmtk-hg/gmtk/tksrc/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GMTKVIZ = 
GREP = /bin/grep
HAVE_HG = yes
HAVE_WXCONFIG = yes
HAVE_WXWIDGETS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lm  $(LEXLIB)
LTLIBOBJS = 
MAKEINFO = ${SHELL} /tmp/gmtk-hg/gmtk/tksrc/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = gmtk
PACKAGE_BUGREPORT = https://lungs.ee.washington.edu/trac/gmtk/newticket
PACKAGE_NAME = GMTK
PACKAGE_STRING = GMTK 0.1
PACKAGE_TARNAME = gmtk
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1
VIZCXXFLAGS = 
VIZLDFLAGS = 
XMKMF = 
abs_builddir = /tmp/gmtk-hg/gmtk/tksrc
abs_srcdir = /tmp/gmtk-hg/gmtk/tksrc
abs_top_builddir = /tmp/gmtk-hg/gmtk/tksrc
abs_top_srcdir = /tmp/gmtk-hg/gmtk/tksrc
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /tmp/gmtk-hg/gmtk/tksrc/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
EXCCFLAGS = 
EXCXXFLAGS = 
EXLDFLAGS = 
DEBUGFLAGS = -g
OPTFLAGS = -O3
ANSI = -ansi
PEDANTIC = -pedantic -Wno-long-long
WALL = -Wall
AM_CFLAGS = \
$(DEBUGFLAGS) $(OPTFLAGS)  $(EXCCFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

AM_CXXFLAGS = \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)


# extra optimization options for certain GMTK sources, used below.
XOPTFLAGS = -funroll-loops -fargument-noalias-global
AM_CPPFLAGS = \
-I$(srcdir)/../miscSupport \
-I$(srcdir)/../IEEEFloatingpoint \
-I$(srcdir)/../featureFileIO

LDADD = libGMTK.a libXOPT.a \
$(builddir)/../featureFileIO/libgmtkio.a \
$(builddir)/../miscSupport/libmiscSupport.a \
$(builddir)/../IEEEFloatingpoint/libIEEEsupport.a

noinst_LIBRARIES = libXOPT.a libGMTK.a
libGMTK_a_SOURCES = \
hgstamp.h \
GMTK_Dense1DPMF.h GMTK_Dense1DPMF.cc \
GMTK_Sparse1DPMF.h GMTK_Sparse1DPMF.cc \
GMTK_MeanVector.h GMTK_MeanVector.cc \
GMTK_DiagCovarVector.h GMTK_DiagCovarVector.cc \
GMTK_RealMatrix.h GMTK_RealMatrix.cc \
GMTK_DlinkMatrix.h GMTK_DlinkMatrix.cc \
GMTK_DirichletTable.h GMTK_DirichletTable.cc \
GMTK_DirichletPrior.h GMTK_DirichletPrior.cc \
GMTK_MDCPT.h GMTK_MDCPT.cc \
GMTK_MSCPT.h GMTK_MSCPT.cc \
GMTK_RealArray.h GMTK_RealArray.cc \
GMTK_CPT.h GMTK_CPT.cc \
GMTK_MixtureCommon.h GMTK_MixtureCommon.cc \
GMTK_Component.h GMTK_Component.cc \
GMTK_GaussianComponent.h GMTK_GaussianComponent.cc \
GMTK_GMParms.h GMTK_GMParms.cc \
GMTK_FileParser.h GMTK_FileParser.cc \
GMTK_FileTokenizer.ll \
GMTK_MTCPT.h GMTK_MTCPT.cc \
GMTK_Mixture.h GMTK_Mixture.cc \
GMTK_DiagGaussian.h GMTK_DiagGaussian.cc \
GMTK_Dlinks.h GMTK_Dlinks.cc \
GMTK_EMable.h GMTK_EMable.cc \
GMTK_LinMeanCondDiagGaussian.h GMTK_LinMeanCondDiagGaussian.cc \
GMTK_RngDecisionTree.h GMTK_RngDecisionTree.cc \
GMTK_NameCollection.h GMTK_NameCollection.cc \
GMTK_GMTemplate.h GMTK_GMTemplate.cc \
GMTK_JunctionTree.h GMTK_JunctionTree.cc \
GMTK_GraphicalModel.h GMTK_GraphicalModel.cc \
GMTK_MaxClique.h GMTK_MaxClique.cc \
GMTK_BoundaryTriangulate.h GMTK_BoundaryTriangulate.cc \
GMTK_Timer.h GMTK_Timer.cc \
GMTK_Signals.h GMTK_Signals.cc \
GMTK_PackCliqueValue.h GMTK_PackCliqueValue.cc \
GMTK_Vocab.h GMTK_Vocab.cc \
GMTK_NGramCPT.h GMTK_NGramCPT.cc \
GMTK_FNGramCPT.h GMTK_FNGramCPT.cc \
GMTK_RV.h GMTK_RV.cc \
GMTK_ContRV.h GMTK_ContRV.cc \
GMTK_DiscRV.h GMTK_DiscRV.cc \
GMTK_HidDiscRV.h GMTK_HidDiscRV.cc \
GMTK_ObsDiscRV.h GMTK_ObsDiscRV.cc \
GMTK_ObsContRV.h GMTK_ObsContRV.cc \
GMTK_ScPnShRV.h GMTK_ScPnShRV.cc \
GMTK_SwDiscRV.h GMTK_SwDiscRV.cc \
GMTK_SwRV.h GMTK_SwRV.cc \
GMTK_Sw_HidDiscRV.h GMTK_Sw_HidDiscRV.cc \
GMTK_Sw_ObsContRV.h GMTK_Sw_ObsContRV.cc \
GMTK_Sw_ObsDiscRV.h GMTK_Sw_ObsDiscRV.cc \
GMTK_VECPT.h GMTK_VECPT.cc \
GMTK_NetworkFlow.h GMTK_NetworkFlow.cc \
GMTK_NetworkFlowTriangulate.h GMTK_NetworkFlowTriangulate.cc \
GMTK_LatticeADT.h GMTK_LatticeADT.cc GMTK_LatticeADT.h GMTK_LatticeNodeCPT.h \
GMTK_FileTokenizer.cc \
GMTK_LatticeNodeCPT.cc \
GMTK_ScPnSh_HidDiscRV.cc \
GMTK_WeightMatrix.cc \
GMTK_NamedObject.h \
GMTK_Arguments.h \
GMTK_DiscRVType.h \
GMTK_FactorInfo.h \
GMTK_JunctionTreeNBestVals.h \
GMTK_NamedObject.h \
GMTK_ProgramDefaultParms.h \
GMTK_ScPnSh_HidDiscRV.h \
GMTK_ScPnSh_ObsContRV.h \
GMTK_ScPnSh_ObsDiscRV.h \
GMTK_ScPnSh_Sw_HidDiscRV.h \
GMTK_ScPnSh_Sw_ObsContRV.h \
GMTK_ScPnSh_Sw_ObsDiscRV.h \
GMTK_SpaceManager.h \
GMTK_SwContRV.h \
GMTK_UnityScoreMixture.h \
GMTK_USCPT.h \
GMTK_WeightMatrix.h \
GMTK_ZeroScoreMixture.h \
tieStructures.h \
GMTK_LatticeEdgeCPT.h GMTK_LatticeEdgeCPT.cc \
GMTK_Tie.h GMTK_Tie.cc \
tieSupport.h tieSupport.cc \
GMTK_RVInfo.h GMTK_RVInfo.cc \
GMTK_GammaComponent.h GMTK_GammaComponent.cc \
GMTK_BetaComponent.h GMTK_BetaComponent.cc \
GMTK_Partition.h GMTK_Partition.cc \
GMTK_JT_Partition.h GMTK_JT_Partition.cc \
GMTK_PartitionTables.h GMTK_PartitionTables.cc \
GMTK_PartitionStructures.h GMTK_PartitionStructures.cc \
GMTK_JunctionTreeMessagePassing.cc \
GMTK_JunctionTreeIslandMessagePassing.cc \
version.h


# GMTK_MissingFeatureScaledDiagGaussian.cc 
# GMTK_MissingFeatureScaledDiagGaussian.h 
libXOPT_a_SOURCES = \
GMTK_DiagGaussianOpt.cc \
GMTK_LinMeanCondDiagGaussianOpt.cc \
GMTK_PackCliqueValueOpt.cc

libXOPT_a_CXXFLAGS = $(XOPTFLAGS) \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

gmtkTie_SOURCES = gmtkTie.cc
gmtkJT_SOURCES = gmtkJT.cc
gmtkTime_SOURCES = gmtkTime.cc
gmtkEMtrainNew_SOURCES = gmtkEMtrainNew.cc
gmtkKernel_SOURCES = gmtkKernel.cc
gmtkViterbi_SOURCES = gmtkViterbi.cc
gmtkTriangulate_SOURCES = gmtkTriangulate.cc
gmtkParmConvert_SOURCES = gmtkParmConvert.cc
gmtkTFmerge_SOURCES = gmtkTFmerge.cc
gmtkDTindex_SOURCES = gmtkDTindex.cc
gmtkNGramIndex_SOURCES = gmtkNGramIndex.cc

#gmtkUnroll_SOURCES = gmtkUnroll.o  libGMTK.a ../miscSupport/libmiscSupport.a .NOEXPORT
#	-@rm -f $@
#	$(compile.cc.link) -Wall -g -DMAIN  -o $@ gmtkUnroll.o $(LIBS)
gmtkViz_SOURCES = gmtkViz.cc
gmtkViz_CXXFLAGS = $(VIZCXXFLAGS) \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

gmtkViz_LDFLAGS = $(EXLDFLAGS) $(VIZLDFLAGS)
# testHash testHashTree?
testMDCPT_SOURCES = GMTK_MDCPT.cc GMTK_MDCPT.h
testMDCPT_CXXFLAGS = -DMAIN \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

testMTCPT_SOURCES = GMTK_MTCPT.cc GMTK_MTCPT.h  
testMTCPT_CXXFLAGS = -DMAIN \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)


#testHash_SOURCES = GMTK_Hash.cc 
#testHash_CXXFLAGS = -DMAIN \
#$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

#testHashTree_SOURCES = GMTK_HashTree.cc 
#testHashTree_CXXFLAGS = -DMAIN \
#$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)
testRngDecisionTree_SOURCES = GMTK_RngDecisionTree.cc \
GMTK_RngDecisionTree.h GMTK_RV.cc GMTK_RV.h GMTK_DiscRV.cc GMTK_DiscRV.h

testRngDecisionTree_CXXFLAGS = -DMAIN \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

testPackCliqueValue_SOURCES = GMTK_PackCliqueValue.cc  GMTK_PackCliqueValue.h
testPackCliqueValue_CXXFLAGS = -DMAIN \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

testGMParms_SOURCES = GMTK_GMParms.cc GMTK_GMParms.h
#	echo $(objs) > /tmp/gmparms_depts
#	$(compile.cc.link) -Wall -g -DMAIN  -o $@ GMTK_GMParms.cc `sed s,GMTK_GMParms.o,, < /tmp/gmparms_depts` $(LIBS)
testGMParms_CXXFLAGS = -DMAIN \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

AM_LFLAGS = -B
lex_yy_SOURCES = GMTK_FileTokenizer.ll
lex_yy_CXXFLAGS = -DMAIN \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

testFileParser_SOURCES = \
GMTK_FileParser.cc GMTK_FileParser.h GMTK_FileTokenizer.ll

#testFileParser_LFLAGS = -B
testFileParser_CXXFLAGS = -DMAIN \
$(DEBUGFLAGS) $(OPTFLAGS) $(EXCXXFLAGS) $(WALL) $(ANSI) $(PEDANTIC)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .ll .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libGMTK.a: $(libGMTK_a_OBJECTS) $(libGMTK_a_DEPENDENCIES) 
	-rm -f libGMTK.a
	$(libGMTK_a_AR) libGMTK.a $(libGMTK_a_OBJECTS) $(libGMTK_a_LIBADD)
	$(RANLIB) libGMTK.a
libXOPT.a: $(libXOPT_a_OBJECTS) $(libXOPT_a_DEPENDENCIES) 
	-rm -f libXOPT.a
	$(libXOPT_a_AR) libXOPT.a $(libXOPT_a_OBJECTS) $(libXOPT_a_LIBADD)
	$(RANLIB) libXOPT.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
gmtkDTindex$(EXEEXT): $(gmtkDTindex_OBJECTS) $(gmtkDTindex_DEPENDENCIES) 
	@rm -f gmtkDTindex$(EXEEXT)
	$(CXXLINK) $(gmtkDTindex_OBJECTS) $(gmtkDTindex_LDADD) $(LIBS)
gmtkEMtrainNew$(EXEEXT): $(gmtkEMtrainNew_OBJECTS) $(gmtkEMtrainNew_DEPENDENCIES) 
	@rm -f gmtkEMtrainNew$(EXEEXT)
	$(CXXLINK) $(gmtkEMtrainNew_OBJECTS) $(gmtkEMtrainNew_LDADD) $(LIBS)
gmtkJT$(EXEEXT): $(gmtkJT_OBJECTS) $(gmtkJT_DEPENDENCIES) 
	@rm -f gmtkJT$(EXEEXT)
	$(CXXLINK) $(gmtkJT_OBJECTS) $(gmtkJT_LDADD) $(LIBS)
gmtkKernel$(EXEEXT): $(gmtkKernel_OBJECTS) $(gmtkKernel_DEPENDENCIES) 
	@rm -f gmtkKernel$(EXEEXT)
	$(CXXLINK) $(gmtkKernel_OBJECTS) $(gmtkKernel_LDADD) $(LIBS)
gmtkNGramIndex$(EXEEXT): $(gmtkNGramIndex_OBJECTS) $(gmtkNGramIndex_DEPENDENCIES) 
	@rm -f gmtkNGramIndex$(EXEEXT)
	$(CXXLINK) $(gmtkNGramIndex_OBJECTS) $(gmtkNGramIndex_LDADD) $(LIBS)
gmtkParmConvert$(EXEEXT): $(gmtkParmConvert_OBJECTS) $(gmtkParmConvert_DEPENDENCIES) 
	@rm -f gmtkParmConvert$(EXEEXT)
	$(CXXLINK) $(gmtkParmConvert_OBJECTS) $(gmtkParmConvert_LDADD) $(LIBS)
gmtkTFmerge$(EXEEXT): $(gmtkTFmerge_OBJECTS) $(gmtkTFmerge_DEPENDENCIES) 
	@rm -f gmtkTFmerge$(EXEEXT)
	$(CXXLINK) $(gmtkTFmerge_OBJECTS) $(gmtkTFmerge_LDADD) $(LIBS)
gmtkTie$(EXEEXT): $(gmtkTie_OBJECTS) $(gmtkTie_DEPENDENCIES) 
	@rm -f gmtkTie$(EXEEXT)
	$(CXXLINK) $(gmtkTie_OBJECTS) $(gmtkTie_LDADD) $(LIBS)
gmtkTime$(EXEEXT): $(gmtkTime_OBJECTS) $(gmtkTime_DEPENDENCIES) 
	@rm -f gmtkTime$(EXEEXT)
	$(CXXLINK) $(gmtkTime_OBJECTS) $(gmtkTime_LDADD) $(LIBS)
gmtkTriangulate$(EXEEXT): $(gmtkTriangulate_OBJECTS) $(gmtkTriangulate_DEPENDENCIES) 
	@rm -f gmtkTriangulate$(EXEEXT)
	$(CXXLINK) $(gmtkTriangulate_OBJECTS) $(gmtkTriangulate_LDADD) $(LIBS)
gmtkViterbi$(EXEEXT): $(gmtkViterbi_OBJECTS) $(gmtkViterbi_DEPENDENCIES) 
	@rm -f gmtkViterbi$(EXEEXT)
	$(CXXLINK) $(gmtkViterbi_OBJECTS) $(gmtkViterbi_LDADD) $(LIBS)
gmtkViz$(EXEEXT): $(gmtkViz_OBJECTS) $(gmtkViz_DEPENDENCIES) 
	@rm -f gmtkViz$(EXEEXT)
	$(gmtkViz_LINK) $(gmtkViz_OBJECTS) $(gmtkViz_LDADD) $(LIBS)
lex.yy$(EXEEXT): $(lex_yy_OBJECTS) $(lex_yy_DEPENDENCIES) 
	@rm -f lex.yy$(EXEEXT)
	$(lex_yy_LINK) $(lex_yy_OBJECTS) $(lex_yy_LDADD) $(LIBS)
testFileParser$(EXEEXT): $(testFileParser_OBJECTS) $(testFileParser_DEPENDENCIES) 
	@rm -f testFileParser$(EXEEXT)
	$(testFileParser_LINK) $(testFileParser_OBJECTS) $(testFileParser_LDADD) $(LIBS)
testGMParms$(EXEEXT): $(testGMParms_OBJECTS) $(testGMParms_DEPENDENCIES) 
	@rm -f testGMParms$(EXEEXT)
	$(testGMParms_LINK) $(testGMParms_OBJECTS) $(testGMParms_LDADD) $(LIBS)
testMDCPT$(EXEEXT): $(testMDCPT_OBJECTS) $(testMDCPT_DEPENDENCIES) 
	@rm -f testMDCPT$(EXEEXT)
	$(testMDCPT_LINK) $(testMDCPT_OBJECTS) $(testMDCPT_LDADD) $(LIBS)
testMTCPT$(EXEEXT): $(testMTCPT_OBJECTS) $(testMTCPT_DEPENDENCIES) 
	@rm -f testMTCPT$(EXEEXT)
	$(testMTCPT_LINK) $(testMTCPT_OBJECTS) $(testMTCPT_LDADD) $(LIBS)
testPackCliqueValue$(EXEEXT): $(testPackCliqueValue_OBJECTS) $(testPackCliqueValue_DEPENDENCIES) 
	@rm -f testPackCliqueValue$(EXEEXT)
	$(testPackCliqueValue_LINK) $(testPackCliqueValue_OBJECTS) $(testPackCliqueValue_LDADD) $(LIBS)
testRngDecisionTree$(EXEEXT): $(testRngDecisionTree_OBJECTS) $(testRngDecisionTree_DEPENDENCIES) 
	@rm -f testRngDecisionTree$(EXEEXT)
	$(testRngDecisionTree_LINK) $(testRngDecisionTree_OBJECTS) $(testRngDecisionTree_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/GMTK_BetaComponent.Po
include ./$(DEPDIR)/GMTK_BoundaryTriangulate.Po
include ./$(DEPDIR)/GMTK_CPT.Po
include ./$(DEPDIR)/GMTK_Component.Po
include ./$(DEPDIR)/GMTK_ContRV.Po
include ./$(DEPDIR)/GMTK_Dense1DPMF.Po
include ./$(DEPDIR)/GMTK_DiagCovarVector.Po
include ./$(DEPDIR)/GMTK_DiagGaussian.Po
include ./$(DEPDIR)/GMTK_DirichletPrior.Po
include ./$(DEPDIR)/GMTK_DirichletTable.Po
include ./$(DEPDIR)/GMTK_DiscRV.Po
include ./$(DEPDIR)/GMTK_DlinkMatrix.Po
include ./$(DEPDIR)/GMTK_Dlinks.Po
include ./$(DEPDIR)/GMTK_EMable.Po
include ./$(DEPDIR)/GMTK_FNGramCPT.Po
include ./$(DEPDIR)/GMTK_FileParser.Po
include ./$(DEPDIR)/GMTK_FileTokenizer.Po
include ./$(DEPDIR)/GMTK_GMParms.Po
include ./$(DEPDIR)/GMTK_GMTemplate.Po
include ./$(DEPDIR)/GMTK_GammaComponent.Po
include ./$(DEPDIR)/GMTK_GaussianComponent.Po
include ./$(DEPDIR)/GMTK_GraphicalModel.Po
include ./$(DEPDIR)/GMTK_HidDiscRV.Po
include ./$(DEPDIR)/GMTK_JT_Partition.Po
include ./$(DEPDIR)/GMTK_JunctionTree.Po
include ./$(DEPDIR)/GMTK_JunctionTreeIslandMessagePassing.Po
include ./$(DEPDIR)/GMTK_JunctionTreeMessagePassing.Po
include ./$(DEPDIR)/GMTK_LatticeADT.Po
include ./$(DEPDIR)/GMTK_LatticeEdgeCPT.Po
include ./$(DEPDIR)/GMTK_LatticeNodeCPT.Po
include ./$(DEPDIR)/GMTK_LinMeanCondDiagGaussian.Po
include ./$(DEPDIR)/GMTK_MDCPT.Po
include ./$(DEPDIR)/GMTK_MSCPT.Po
include ./$(DEPDIR)/GMTK_MTCPT.Po
include ./$(DEPDIR)/GMTK_MaxClique.Po
include ./$(DEPDIR)/GMTK_MeanVector.Po
include ./$(DEPDIR)/GMTK_Mixture.Po
include ./$(DEPDIR)/GMTK_MixtureCommon.Po
include ./$(DEPDIR)/GMTK_NGramCPT.Po
include ./$(DEPDIR)/GMTK_NameCollection.Po
include ./$(DEPDIR)/GMTK_NetworkFlow.Po
include ./$(DEPDIR)/GMTK_NetworkFlowTriangulate.Po
include ./$(DEPDIR)/GMTK_ObsContRV.Po
include ./$(DEPDIR)/GMTK_ObsDiscRV.Po
include ./$(DEPDIR)/GMTK_PackCliqueValue.Po
include ./$(DEPDIR)/GMTK_Partition.Po
include ./$(DEPDIR)/GMTK_PartitionStructures.Po
include ./$(DEPDIR)/GMTK_PartitionTables.Po
include ./$(DEPDIR)/GMTK_RV.Po
include ./$(DEPDIR)/GMTK_RVInfo.Po
include ./$(DEPDIR)/GMTK_RealArray.Po
include ./$(DEPDIR)/GMTK_RealMatrix.Po
include ./$(DEPDIR)/GMTK_RngDecisionTree.Po
include ./$(DEPDIR)/GMTK_ScPnShRV.Po
include ./$(DEPDIR)/GMTK_ScPnSh_HidDiscRV.Po
include ./$(DEPDIR)/GMTK_Signals.Po
include ./$(DEPDIR)/GMTK_Sparse1DPMF.Po
include ./$(DEPDIR)/GMTK_SwDiscRV.Po
include ./$(DEPDIR)/GMTK_SwRV.Po
include ./$(DEPDIR)/GMTK_Sw_HidDiscRV.Po
include ./$(DEPDIR)/GMTK_Sw_ObsContRV.Po
include ./$(DEPDIR)/GMTK_Sw_ObsDiscRV.Po
include ./$(DEPDIR)/GMTK_Tie.Po
include ./$(DEPDIR)/GMTK_Timer.Po
include ./$(DEPDIR)/GMTK_VECPT.Po
include ./$(DEPDIR)/GMTK_Vocab.Po
include ./$(DEPDIR)/GMTK_WeightMatrix.Po
include ./$(DEPDIR)/gmtkDTindex.Po
include ./$(DEPDIR)/gmtkEMtrainNew.Po
include ./$(DEPDIR)/gmtkJT.Po
include ./$(DEPDIR)/gmtkKernel.Po
include ./$(DEPDIR)/gmtkNGramIndex.Po
include ./$(DEPDIR)/gmtkParmConvert.Po
include ./$(DEPDIR)/gmtkTFmerge.Po
include ./$(DEPDIR)/gmtkTie.Po
include ./$(DEPDIR)/gmtkTime.Po
include ./$(DEPDIR)/gmtkTriangulate.Po
include ./$(DEPDIR)/gmtkViterbi.Po
include ./$(DEPDIR)/gmtkViz-gmtkViz.Po
include ./$(DEPDIR)/lex_yy-GMTK_FileTokenizer.Po
include ./$(DEPDIR)/libXOPT_a-GMTK_DiagGaussianOpt.Po
include ./$(DEPDIR)/libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.Po
include ./$(DEPDIR)/libXOPT_a-GMTK_PackCliqueValueOpt.Po
include ./$(DEPDIR)/testFileParser-GMTK_FileParser.Po
include ./$(DEPDIR)/testFileParser-GMTK_FileTokenizer.Po
include ./$(DEPDIR)/testGMParms-GMTK_GMParms.Po
include ./$(DEPDIR)/testMDCPT-GMTK_MDCPT.Po
include ./$(DEPDIR)/testMTCPT-GMTK_MTCPT.Po
include ./$(DEPDIR)/testPackCliqueValue-GMTK_PackCliqueValue.Po
include ./$(DEPDIR)/testRngDecisionTree-GMTK_DiscRV.Po
include ./$(DEPDIR)/testRngDecisionTree-GMTK_RV.Po
include ./$(DEPDIR)/testRngDecisionTree-GMTK_RngDecisionTree.Po
include ./$(DEPDIR)/tieSupport.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libXOPT_a-GMTK_DiagGaussianOpt.o: GMTK_DiagGaussianOpt.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -MT libXOPT_a-GMTK_DiagGaussianOpt.o -MD -MP -MF $(DEPDIR)/libXOPT_a-GMTK_DiagGaussianOpt.Tpo -c -o libXOPT_a-GMTK_DiagGaussianOpt.o `test -f 'GMTK_DiagGaussianOpt.cc' || echo '$(srcdir)/'`GMTK_DiagGaussianOpt.cc
	$(am__mv) $(DEPDIR)/libXOPT_a-GMTK_DiagGaussianOpt.Tpo $(DEPDIR)/libXOPT_a-GMTK_DiagGaussianOpt.Po
#	source='GMTK_DiagGaussianOpt.cc' object='libXOPT_a-GMTK_DiagGaussianOpt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -c -o libXOPT_a-GMTK_DiagGaussianOpt.o `test -f 'GMTK_DiagGaussianOpt.cc' || echo '$(srcdir)/'`GMTK_DiagGaussianOpt.cc

libXOPT_a-GMTK_DiagGaussianOpt.obj: GMTK_DiagGaussianOpt.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -MT libXOPT_a-GMTK_DiagGaussianOpt.obj -MD -MP -MF $(DEPDIR)/libXOPT_a-GMTK_DiagGaussianOpt.Tpo -c -o libXOPT_a-GMTK_DiagGaussianOpt.obj `if test -f 'GMTK_DiagGaussianOpt.cc'; then $(CYGPATH_W) 'GMTK_DiagGaussianOpt.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_DiagGaussianOpt.cc'; fi`
	$(am__mv) $(DEPDIR)/libXOPT_a-GMTK_DiagGaussianOpt.Tpo $(DEPDIR)/libXOPT_a-GMTK_DiagGaussianOpt.Po
#	source='GMTK_DiagGaussianOpt.cc' object='libXOPT_a-GMTK_DiagGaussianOpt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -c -o libXOPT_a-GMTK_DiagGaussianOpt.obj `if test -f 'GMTK_DiagGaussianOpt.cc'; then $(CYGPATH_W) 'GMTK_DiagGaussianOpt.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_DiagGaussianOpt.cc'; fi`

libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.o: GMTK_LinMeanCondDiagGaussianOpt.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -MT libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.o -MD -MP -MF $(DEPDIR)/libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.Tpo -c -o libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.o `test -f 'GMTK_LinMeanCondDiagGaussianOpt.cc' || echo '$(srcdir)/'`GMTK_LinMeanCondDiagGaussianOpt.cc
	$(am__mv) $(DEPDIR)/libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.Tpo $(DEPDIR)/libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.Po
#	source='GMTK_LinMeanCondDiagGaussianOpt.cc' object='libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -c -o libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.o `test -f 'GMTK_LinMeanCondDiagGaussianOpt.cc' || echo '$(srcdir)/'`GMTK_LinMeanCondDiagGaussianOpt.cc

libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.obj: GMTK_LinMeanCondDiagGaussianOpt.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -MT libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.obj -MD -MP -MF $(DEPDIR)/libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.Tpo -c -o libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.obj `if test -f 'GMTK_LinMeanCondDiagGaussianOpt.cc'; then $(CYGPATH_W) 'GMTK_LinMeanCondDiagGaussianOpt.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_LinMeanCondDiagGaussianOpt.cc'; fi`
	$(am__mv) $(DEPDIR)/libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.Tpo $(DEPDIR)/libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.Po
#	source='GMTK_LinMeanCondDiagGaussianOpt.cc' object='libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -c -o libXOPT_a-GMTK_LinMeanCondDiagGaussianOpt.obj `if test -f 'GMTK_LinMeanCondDiagGaussianOpt.cc'; then $(CYGPATH_W) 'GMTK_LinMeanCondDiagGaussianOpt.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_LinMeanCondDiagGaussianOpt.cc'; fi`

libXOPT_a-GMTK_PackCliqueValueOpt.o: GMTK_PackCliqueValueOpt.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -MT libXOPT_a-GMTK_PackCliqueValueOpt.o -MD -MP -MF $(DEPDIR)/libXOPT_a-GMTK_PackCliqueValueOpt.Tpo -c -o libXOPT_a-GMTK_PackCliqueValueOpt.o `test -f 'GMTK_PackCliqueValueOpt.cc' || echo '$(srcdir)/'`GMTK_PackCliqueValueOpt.cc
	$(am__mv) $(DEPDIR)/libXOPT_a-GMTK_PackCliqueValueOpt.Tpo $(DEPDIR)/libXOPT_a-GMTK_PackCliqueValueOpt.Po
#	source='GMTK_PackCliqueValueOpt.cc' object='libXOPT_a-GMTK_PackCliqueValueOpt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -c -o libXOPT_a-GMTK_PackCliqueValueOpt.o `test -f 'GMTK_PackCliqueValueOpt.cc' || echo '$(srcdir)/'`GMTK_PackCliqueValueOpt.cc

libXOPT_a-GMTK_PackCliqueValueOpt.obj: GMTK_PackCliqueValueOpt.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -MT libXOPT_a-GMTK_PackCliqueValueOpt.obj -MD -MP -MF $(DEPDIR)/libXOPT_a-GMTK_PackCliqueValueOpt.Tpo -c -o libXOPT_a-GMTK_PackCliqueValueOpt.obj `if test -f 'GMTK_PackCliqueValueOpt.cc'; then $(CYGPATH_W) 'GMTK_PackCliqueValueOpt.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_PackCliqueValueOpt.cc'; fi`
	$(am__mv) $(DEPDIR)/libXOPT_a-GMTK_PackCliqueValueOpt.Tpo $(DEPDIR)/libXOPT_a-GMTK_PackCliqueValueOpt.Po
#	source='GMTK_PackCliqueValueOpt.cc' object='libXOPT_a-GMTK_PackCliqueValueOpt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libXOPT_a_CXXFLAGS) $(CXXFLAGS) -c -o libXOPT_a-GMTK_PackCliqueValueOpt.obj `if test -f 'GMTK_PackCliqueValueOpt.cc'; then $(CYGPATH_W) 'GMTK_PackCliqueValueOpt.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_PackCliqueValueOpt.cc'; fi`

gmtkViz-gmtkViz.o: gmtkViz.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gmtkViz_CXXFLAGS) $(CXXFLAGS) -MT gmtkViz-gmtkViz.o -MD -MP -MF $(DEPDIR)/gmtkViz-gmtkViz.Tpo -c -o gmtkViz-gmtkViz.o `test -f 'gmtkViz.cc' || echo '$(srcdir)/'`gmtkViz.cc
	$(am__mv) $(DEPDIR)/gmtkViz-gmtkViz.Tpo $(DEPDIR)/gmtkViz-gmtkViz.Po
#	source='gmtkViz.cc' object='gmtkViz-gmtkViz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gmtkViz_CXXFLAGS) $(CXXFLAGS) -c -o gmtkViz-gmtkViz.o `test -f 'gmtkViz.cc' || echo '$(srcdir)/'`gmtkViz.cc

gmtkViz-gmtkViz.obj: gmtkViz.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gmtkViz_CXXFLAGS) $(CXXFLAGS) -MT gmtkViz-gmtkViz.obj -MD -MP -MF $(DEPDIR)/gmtkViz-gmtkViz.Tpo -c -o gmtkViz-gmtkViz.obj `if test -f 'gmtkViz.cc'; then $(CYGPATH_W) 'gmtkViz.cc'; else $(CYGPATH_W) '$(srcdir)/gmtkViz.cc'; fi`
	$(am__mv) $(DEPDIR)/gmtkViz-gmtkViz.Tpo $(DEPDIR)/gmtkViz-gmtkViz.Po
#	source='gmtkViz.cc' object='gmtkViz-gmtkViz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gmtkViz_CXXFLAGS) $(CXXFLAGS) -c -o gmtkViz-gmtkViz.obj `if test -f 'gmtkViz.cc'; then $(CYGPATH_W) 'gmtkViz.cc'; else $(CYGPATH_W) '$(srcdir)/gmtkViz.cc'; fi`

lex_yy-GMTK_FileTokenizer.o: GMTK_FileTokenizer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lex_yy_CXXFLAGS) $(CXXFLAGS) -MT lex_yy-GMTK_FileTokenizer.o -MD -MP -MF $(DEPDIR)/lex_yy-GMTK_FileTokenizer.Tpo -c -o lex_yy-GMTK_FileTokenizer.o `test -f 'GMTK_FileTokenizer.cc' || echo '$(srcdir)/'`GMTK_FileTokenizer.cc
	$(am__mv) $(DEPDIR)/lex_yy-GMTK_FileTokenizer.Tpo $(DEPDIR)/lex_yy-GMTK_FileTokenizer.Po
#	source='GMTK_FileTokenizer.cc' object='lex_yy-GMTK_FileTokenizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lex_yy_CXXFLAGS) $(CXXFLAGS) -c -o lex_yy-GMTK_FileTokenizer.o `test -f 'GMTK_FileTokenizer.cc' || echo '$(srcdir)/'`GMTK_FileTokenizer.cc

lex_yy-GMTK_FileTokenizer.obj: GMTK_FileTokenizer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lex_yy_CXXFLAGS) $(CXXFLAGS) -MT lex_yy-GMTK_FileTokenizer.obj -MD -MP -MF $(DEPDIR)/lex_yy-GMTK_FileTokenizer.Tpo -c -o lex_yy-GMTK_FileTokenizer.obj `if test -f 'GMTK_FileTokenizer.cc'; then $(CYGPATH_W) 'GMTK_FileTokenizer.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_FileTokenizer.cc'; fi`
	$(am__mv) $(DEPDIR)/lex_yy-GMTK_FileTokenizer.Tpo $(DEPDIR)/lex_yy-GMTK_FileTokenizer.Po
#	source='GMTK_FileTokenizer.cc' object='lex_yy-GMTK_FileTokenizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lex_yy_CXXFLAGS) $(CXXFLAGS) -c -o lex_yy-GMTK_FileTokenizer.obj `if test -f 'GMTK_FileTokenizer.cc'; then $(CYGPATH_W) 'GMTK_FileTokenizer.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_FileTokenizer.cc'; fi`

testFileParser-GMTK_FileParser.o: GMTK_FileParser.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testFileParser_CXXFLAGS) $(CXXFLAGS) -MT testFileParser-GMTK_FileParser.o -MD -MP -MF $(DEPDIR)/testFileParser-GMTK_FileParser.Tpo -c -o testFileParser-GMTK_FileParser.o `test -f 'GMTK_FileParser.cc' || echo '$(srcdir)/'`GMTK_FileParser.cc
	$(am__mv) $(DEPDIR)/testFileParser-GMTK_FileParser.Tpo $(DEPDIR)/testFileParser-GMTK_FileParser.Po
#	source='GMTK_FileParser.cc' object='testFileParser-GMTK_FileParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testFileParser_CXXFLAGS) $(CXXFLAGS) -c -o testFileParser-GMTK_FileParser.o `test -f 'GMTK_FileParser.cc' || echo '$(srcdir)/'`GMTK_FileParser.cc

testFileParser-GMTK_FileParser.obj: GMTK_FileParser.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testFileParser_CXXFLAGS) $(CXXFLAGS) -MT testFileParser-GMTK_FileParser.obj -MD -MP -MF $(DEPDIR)/testFileParser-GMTK_FileParser.Tpo -c -o testFileParser-GMTK_FileParser.obj `if test -f 'GMTK_FileParser.cc'; then $(CYGPATH_W) 'GMTK_FileParser.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_FileParser.cc'; fi`
	$(am__mv) $(DEPDIR)/testFileParser-GMTK_FileParser.Tpo $(DEPDIR)/testFileParser-GMTK_FileParser.Po
#	source='GMTK_FileParser.cc' object='testFileParser-GMTK_FileParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testFileParser_CXXFLAGS) $(CXXFLAGS) -c -o testFileParser-GMTK_FileParser.obj `if test -f 'GMTK_FileParser.cc'; then $(CYGPATH_W) 'GMTK_FileParser.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_FileParser.cc'; fi`

testFileParser-GMTK_FileTokenizer.o: GMTK_FileTokenizer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testFileParser_CXXFLAGS) $(CXXFLAGS) -MT testFileParser-GMTK_FileTokenizer.o -MD -MP -MF $(DEPDIR)/testFileParser-GMTK_FileTokenizer.Tpo -c -o testFileParser-GMTK_FileTokenizer.o `test -f 'GMTK_FileTokenizer.cc' || echo '$(srcdir)/'`GMTK_FileTokenizer.cc
	$(am__mv) $(DEPDIR)/testFileParser-GMTK_FileTokenizer.Tpo $(DEPDIR)/testFileParser-GMTK_FileTokenizer.Po
#	source='GMTK_FileTokenizer.cc' object='testFileParser-GMTK_FileTokenizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testFileParser_CXXFLAGS) $(CXXFLAGS) -c -o testFileParser-GMTK_FileTokenizer.o `test -f 'GMTK_FileTokenizer.cc' || echo '$(srcdir)/'`GMTK_FileTokenizer.cc

testFileParser-GMTK_FileTokenizer.obj: GMTK_FileTokenizer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testFileParser_CXXFLAGS) $(CXXFLAGS) -MT testFileParser-GMTK_FileTokenizer.obj -MD -MP -MF $(DEPDIR)/testFileParser-GMTK_FileTokenizer.Tpo -c -o testFileParser-GMTK_FileTokenizer.obj `if test -f 'GMTK_FileTokenizer.cc'; then $(CYGPATH_W) 'GMTK_FileTokenizer.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_FileTokenizer.cc'; fi`
	$(am__mv) $(DEPDIR)/testFileParser-GMTK_FileTokenizer.Tpo $(DEPDIR)/testFileParser-GMTK_FileTokenizer.Po
#	source='GMTK_FileTokenizer.cc' object='testFileParser-GMTK_FileTokenizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testFileParser_CXXFLAGS) $(CXXFLAGS) -c -o testFileParser-GMTK_FileTokenizer.obj `if test -f 'GMTK_FileTokenizer.cc'; then $(CYGPATH_W) 'GMTK_FileTokenizer.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_FileTokenizer.cc'; fi`

testGMParms-GMTK_GMParms.o: GMTK_GMParms.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testGMParms_CXXFLAGS) $(CXXFLAGS) -MT testGMParms-GMTK_GMParms.o -MD -MP -MF $(DEPDIR)/testGMParms-GMTK_GMParms.Tpo -c -o testGMParms-GMTK_GMParms.o `test -f 'GMTK_GMParms.cc' || echo '$(srcdir)/'`GMTK_GMParms.cc
	$(am__mv) $(DEPDIR)/testGMParms-GMTK_GMParms.Tpo $(DEPDIR)/testGMParms-GMTK_GMParms.Po
#	source='GMTK_GMParms.cc' object='testGMParms-GMTK_GMParms.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testGMParms_CXXFLAGS) $(CXXFLAGS) -c -o testGMParms-GMTK_GMParms.o `test -f 'GMTK_GMParms.cc' || echo '$(srcdir)/'`GMTK_GMParms.cc

testGMParms-GMTK_GMParms.obj: GMTK_GMParms.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testGMParms_CXXFLAGS) $(CXXFLAGS) -MT testGMParms-GMTK_GMParms.obj -MD -MP -MF $(DEPDIR)/testGMParms-GMTK_GMParms.Tpo -c -o testGMParms-GMTK_GMParms.obj `if test -f 'GMTK_GMParms.cc'; then $(CYGPATH_W) 'GMTK_GMParms.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_GMParms.cc'; fi`
	$(am__mv) $(DEPDIR)/testGMParms-GMTK_GMParms.Tpo $(DEPDIR)/testGMParms-GMTK_GMParms.Po
#	source='GMTK_GMParms.cc' object='testGMParms-GMTK_GMParms.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testGMParms_CXXFLAGS) $(CXXFLAGS) -c -o testGMParms-GMTK_GMParms.obj `if test -f 'GMTK_GMParms.cc'; then $(CYGPATH_W) 'GMTK_GMParms.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_GMParms.cc'; fi`

testMDCPT-GMTK_MDCPT.o: GMTK_MDCPT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testMDCPT_CXXFLAGS) $(CXXFLAGS) -MT testMDCPT-GMTK_MDCPT.o -MD -MP -MF $(DEPDIR)/testMDCPT-GMTK_MDCPT.Tpo -c -o testMDCPT-GMTK_MDCPT.o `test -f 'GMTK_MDCPT.cc' || echo '$(srcdir)/'`GMTK_MDCPT.cc
	$(am__mv) $(DEPDIR)/testMDCPT-GMTK_MDCPT.Tpo $(DEPDIR)/testMDCPT-GMTK_MDCPT.Po
#	source='GMTK_MDCPT.cc' object='testMDCPT-GMTK_MDCPT.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testMDCPT_CXXFLAGS) $(CXXFLAGS) -c -o testMDCPT-GMTK_MDCPT.o `test -f 'GMTK_MDCPT.cc' || echo '$(srcdir)/'`GMTK_MDCPT.cc

testMDCPT-GMTK_MDCPT.obj: GMTK_MDCPT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testMDCPT_CXXFLAGS) $(CXXFLAGS) -MT testMDCPT-GMTK_MDCPT.obj -MD -MP -MF $(DEPDIR)/testMDCPT-GMTK_MDCPT.Tpo -c -o testMDCPT-GMTK_MDCPT.obj `if test -f 'GMTK_MDCPT.cc'; then $(CYGPATH_W) 'GMTK_MDCPT.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_MDCPT.cc'; fi`
	$(am__mv) $(DEPDIR)/testMDCPT-GMTK_MDCPT.Tpo $(DEPDIR)/testMDCPT-GMTK_MDCPT.Po
#	source='GMTK_MDCPT.cc' object='testMDCPT-GMTK_MDCPT.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testMDCPT_CXXFLAGS) $(CXXFLAGS) -c -o testMDCPT-GMTK_MDCPT.obj `if test -f 'GMTK_MDCPT.cc'; then $(CYGPATH_W) 'GMTK_MDCPT.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_MDCPT.cc'; fi`

testMTCPT-GMTK_MTCPT.o: GMTK_MTCPT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testMTCPT_CXXFLAGS) $(CXXFLAGS) -MT testMTCPT-GMTK_MTCPT.o -MD -MP -MF $(DEPDIR)/testMTCPT-GMTK_MTCPT.Tpo -c -o testMTCPT-GMTK_MTCPT.o `test -f 'GMTK_MTCPT.cc' || echo '$(srcdir)/'`GMTK_MTCPT.cc
	$(am__mv) $(DEPDIR)/testMTCPT-GMTK_MTCPT.Tpo $(DEPDIR)/testMTCPT-GMTK_MTCPT.Po
#	source='GMTK_MTCPT.cc' object='testMTCPT-GMTK_MTCPT.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testMTCPT_CXXFLAGS) $(CXXFLAGS) -c -o testMTCPT-GMTK_MTCPT.o `test -f 'GMTK_MTCPT.cc' || echo '$(srcdir)/'`GMTK_MTCPT.cc

testMTCPT-GMTK_MTCPT.obj: GMTK_MTCPT.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testMTCPT_CXXFLAGS) $(CXXFLAGS) -MT testMTCPT-GMTK_MTCPT.obj -MD -MP -MF $(DEPDIR)/testMTCPT-GMTK_MTCPT.Tpo -c -o testMTCPT-GMTK_MTCPT.obj `if test -f 'GMTK_MTCPT.cc'; then $(CYGPATH_W) 'GMTK_MTCPT.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_MTCPT.cc'; fi`
	$(am__mv) $(DEPDIR)/testMTCPT-GMTK_MTCPT.Tpo $(DEPDIR)/testMTCPT-GMTK_MTCPT.Po
#	source='GMTK_MTCPT.cc' object='testMTCPT-GMTK_MTCPT.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testMTCPT_CXXFLAGS) $(CXXFLAGS) -c -o testMTCPT-GMTK_MTCPT.obj `if test -f 'GMTK_MTCPT.cc'; then $(CYGPATH_W) 'GMTK_MTCPT.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_MTCPT.cc'; fi`

testPackCliqueValue-GMTK_PackCliqueValue.o: GMTK_PackCliqueValue.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testPackCliqueValue_CXXFLAGS) $(CXXFLAGS) -MT testPackCliqueValue-GMTK_PackCliqueValue.o -MD -MP -MF $(DEPDIR)/testPackCliqueValue-GMTK_PackCliqueValue.Tpo -c -o testPackCliqueValue-GMTK_PackCliqueValue.o `test -f 'GMTK_PackCliqueValue.cc' || echo '$(srcdir)/'`GMTK_PackCliqueValue.cc
	$(am__mv) $(DEPDIR)/testPackCliqueValue-GMTK_PackCliqueValue.Tpo $(DEPDIR)/testPackCliqueValue-GMTK_PackCliqueValue.Po
#	source='GMTK_PackCliqueValue.cc' object='testPackCliqueValue-GMTK_PackCliqueValue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testPackCliqueValue_CXXFLAGS) $(CXXFLAGS) -c -o testPackCliqueValue-GMTK_PackCliqueValue.o `test -f 'GMTK_PackCliqueValue.cc' || echo '$(srcdir)/'`GMTK_PackCliqueValue.cc

testPackCliqueValue-GMTK_PackCliqueValue.obj: GMTK_PackCliqueValue.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testPackCliqueValue_CXXFLAGS) $(CXXFLAGS) -MT testPackCliqueValue-GMTK_PackCliqueValue.obj -MD -MP -MF $(DEPDIR)/testPackCliqueValue-GMTK_PackCliqueValue.Tpo -c -o testPackCliqueValue-GMTK_PackCliqueValue.obj `if test -f 'GMTK_PackCliqueValue.cc'; then $(CYGPATH_W) 'GMTK_PackCliqueValue.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_PackCliqueValue.cc'; fi`
	$(am__mv) $(DEPDIR)/testPackCliqueValue-GMTK_PackCliqueValue.Tpo $(DEPDIR)/testPackCliqueValue-GMTK_PackCliqueValue.Po
#	source='GMTK_PackCliqueValue.cc' object='testPackCliqueValue-GMTK_PackCliqueValue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testPackCliqueValue_CXXFLAGS) $(CXXFLAGS) -c -o testPackCliqueValue-GMTK_PackCliqueValue.obj `if test -f 'GMTK_PackCliqueValue.cc'; then $(CYGPATH_W) 'GMTK_PackCliqueValue.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_PackCliqueValue.cc'; fi`

testRngDecisionTree-GMTK_RngDecisionTree.o: GMTK_RngDecisionTree.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -MT testRngDecisionTree-GMTK_RngDecisionTree.o -MD -MP -MF $(DEPDIR)/testRngDecisionTree-GMTK_RngDecisionTree.Tpo -c -o testRngDecisionTree-GMTK_RngDecisionTree.o `test -f 'GMTK_RngDecisionTree.cc' || echo '$(srcdir)/'`GMTK_RngDecisionTree.cc
	$(am__mv) $(DEPDIR)/testRngDecisionTree-GMTK_RngDecisionTree.Tpo $(DEPDIR)/testRngDecisionTree-GMTK_RngDecisionTree.Po
#	source='GMTK_RngDecisionTree.cc' object='testRngDecisionTree-GMTK_RngDecisionTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -c -o testRngDecisionTree-GMTK_RngDecisionTree.o `test -f 'GMTK_RngDecisionTree.cc' || echo '$(srcdir)/'`GMTK_RngDecisionTree.cc

testRngDecisionTree-GMTK_RngDecisionTree.obj: GMTK_RngDecisionTree.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -MT testRngDecisionTree-GMTK_RngDecisionTree.obj -MD -MP -MF $(DEPDIR)/testRngDecisionTree-GMTK_RngDecisionTree.Tpo -c -o testRngDecisionTree-GMTK_RngDecisionTree.obj `if test -f 'GMTK_RngDecisionTree.cc'; then $(CYGPATH_W) 'GMTK_RngDecisionTree.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_RngDecisionTree.cc'; fi`
	$(am__mv) $(DEPDIR)/testRngDecisionTree-GMTK_RngDecisionTree.Tpo $(DEPDIR)/testRngDecisionTree-GMTK_RngDecisionTree.Po
#	source='GMTK_RngDecisionTree.cc' object='testRngDecisionTree-GMTK_RngDecisionTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -c -o testRngDecisionTree-GMTK_RngDecisionTree.obj `if test -f 'GMTK_RngDecisionTree.cc'; then $(CYGPATH_W) 'GMTK_RngDecisionTree.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_RngDecisionTree.cc'; fi`

testRngDecisionTree-GMTK_RV.o: GMTK_RV.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -MT testRngDecisionTree-GMTK_RV.o -MD -MP -MF $(DEPDIR)/testRngDecisionTree-GMTK_RV.Tpo -c -o testRngDecisionTree-GMTK_RV.o `test -f 'GMTK_RV.cc' || echo '$(srcdir)/'`GMTK_RV.cc
	$(am__mv) $(DEPDIR)/testRngDecisionTree-GMTK_RV.Tpo $(DEPDIR)/testRngDecisionTree-GMTK_RV.Po
#	source='GMTK_RV.cc' object='testRngDecisionTree-GMTK_RV.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -c -o testRngDecisionTree-GMTK_RV.o `test -f 'GMTK_RV.cc' || echo '$(srcdir)/'`GMTK_RV.cc

testRngDecisionTree-GMTK_RV.obj: GMTK_RV.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -MT testRngDecisionTree-GMTK_RV.obj -MD -MP -MF $(DEPDIR)/testRngDecisionTree-GMTK_RV.Tpo -c -o testRngDecisionTree-GMTK_RV.obj `if test -f 'GMTK_RV.cc'; then $(CYGPATH_W) 'GMTK_RV.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_RV.cc'; fi`
	$(am__mv) $(DEPDIR)/testRngDecisionTree-GMTK_RV.Tpo $(DEPDIR)/testRngDecisionTree-GMTK_RV.Po
#	source='GMTK_RV.cc' object='testRngDecisionTree-GMTK_RV.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -c -o testRngDecisionTree-GMTK_RV.obj `if test -f 'GMTK_RV.cc'; then $(CYGPATH_W) 'GMTK_RV.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_RV.cc'; fi`

testRngDecisionTree-GMTK_DiscRV.o: GMTK_DiscRV.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -MT testRngDecisionTree-GMTK_DiscRV.o -MD -MP -MF $(DEPDIR)/testRngDecisionTree-GMTK_DiscRV.Tpo -c -o testRngDecisionTree-GMTK_DiscRV.o `test -f 'GMTK_DiscRV.cc' || echo '$(srcdir)/'`GMTK_DiscRV.cc
	$(am__mv) $(DEPDIR)/testRngDecisionTree-GMTK_DiscRV.Tpo $(DEPDIR)/testRngDecisionTree-GMTK_DiscRV.Po
#	source='GMTK_DiscRV.cc' object='testRngDecisionTree-GMTK_DiscRV.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -c -o testRngDecisionTree-GMTK_DiscRV.o `test -f 'GMTK_DiscRV.cc' || echo '$(srcdir)/'`GMTK_DiscRV.cc

testRngDecisionTree-GMTK_DiscRV.obj: GMTK_DiscRV.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -MT testRngDecisionTree-GMTK_DiscRV.obj -MD -MP -MF $(DEPDIR)/testRngDecisionTree-GMTK_DiscRV.Tpo -c -o testRngDecisionTree-GMTK_DiscRV.obj `if test -f 'GMTK_DiscRV.cc'; then $(CYGPATH_W) 'GMTK_DiscRV.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_DiscRV.cc'; fi`
	$(am__mv) $(DEPDIR)/testRngDecisionTree-GMTK_DiscRV.Tpo $(DEPDIR)/testRngDecisionTree-GMTK_DiscRV.Po
#	source='GMTK_DiscRV.cc' object='testRngDecisionTree-GMTK_DiscRV.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testRngDecisionTree_CXXFLAGS) $(CXXFLAGS) -c -o testRngDecisionTree-GMTK_DiscRV.obj `if test -f 'GMTK_DiscRV.cc'; then $(CYGPATH_W) 'GMTK_DiscRV.cc'; else $(CYGPATH_W) '$(srcdir)/GMTK_DiscRV.cc'; fi`

.ll.cc:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f GMTK_FileTokenizer.cc
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-noinstLIBRARIES ctags dist dist-all dist-bzip2 dist-gzip \
	dist-lzma dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# this will keep the Mercurial revision id current if you're building 
# in a working directory. If you're not, use the distributed hgstamp.h
.PHONY: hgstamp.h
hgstamp.h:
	echo -n "#define HGID \"" > hgstamp.h
	hg id $(srcdir)/.. | tr -d \\n >> hgstamp.h
	echo \" >> hgstamp.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
